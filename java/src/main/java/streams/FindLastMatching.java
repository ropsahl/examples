/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package streams;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class FindLastMatching {
    private Person findLastOfTallestInList(final List<Person> people, final int maxHeight) {
        return people.stream()
                .filter(p -> p.height < maxHeight)
                .reduce(FindLastMatching::taller)
                .orElse(null);
    }

    private static Person taller(Person first, Person second) {
        return first.height > second.height ? first : second;
    }

    private List<Person> makePersonsList() {
        return Stream.of(new Object[][]{
                {"Hans", 176},
                {"Ole", 180},
                {"Ragna", 180},
                {"Knut", 190},
                {"Dole", 171},
                {"Doffen", 180},
                {"TheLastOne", 180},
                {"Donald", 190},
                {"Anton", 156}})
                .map(arr -> new Person((String) arr[0], (Integer) arr[1]))
                .collect(Collectors.toList());
    }

    class Person {
        String name;
        int height;

        Person(String name, int height) {
            this.name = name;
            this.height = height;
        }

        @Override
        public String toString() {
            return "Person{" +
                    "name='" + name + '\'' +
                    ", height=" + height +
                    '}';
        }
    }

    public static void main(String[] args) {
        FindLastMatching findLastMatching = new FindLastMatching();
        Person lastOfTallestInList = findLastMatching.findLastOfTallestInList(findLastMatching.makePersonsList(), 190);
        System.out.println("Last of the tallest people lower than 190cm:" +lastOfTallestInList.toString());
    }
}
